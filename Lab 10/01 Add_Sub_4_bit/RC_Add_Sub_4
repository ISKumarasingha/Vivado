----------------------------------------------------------------------------------
-- Company: 
-- Engineer: 
-- 
-- Create Date: 05/24/2023 05:11:16 PM
-- Design Name: 
-- Module Name: RC_Add_Sub_4 - Behavioral
-- Project Name: 
-- Target Devices: 
-- Tool Versions: 
-- Description: 
-- 
-- Dependencies: 
-- 
-- Revision:
-- Revision 0.01 - File Created
-- Additional Comments:
-- 
----------------------------------------------------------------------------------


library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--use IEEE.NUMERIC_STD.ALL;

-- Uncomment the following library declaration if instantiating
-- any Xilinx leaf cells in this code.
--library UNISIM;
--use UNISIM.VComponents.all;

entity RC_Add_Sub_4 is
Port ( A : in STD_LOGIC_VECTOR(3 downto 0) ; 
       B : in STD_LOGIC_VECTOR(3 downto 0) ; 
       M : in STD_LOGIC; -- M=1 -> Sub  
       C_out : out STD_LOGIC;
       Over_Flow : out STD_LOGIC;
       S : out STD_LOGIC_VECTOR(3 downto 0)) ; 

     
end RC_Add_Sub_4;

architecture Behavioral of RC_Add_Sub_4 is

component FA 
 port ( 
      A: in std_logic; 
      B: in std_logic; 
      C_in: in std_logic; 
      S: out std_logic; 
      C_out: out std_logic); 
end component; 

SIGNAL FA0_S, FA0_C, FA1_S, FA1_C, FA2_S, FA2_C, FA3_S, FA3_C : std_logic; 
SIGNAL B0M, B1M, B2M, B3M  : std_logic; 
SIGNAL S_out : STD_LOGIC_VECTOR(3 downto 0);

begin 
 FA_0 : FA 
    port map ( 
         A => A(0), 
         B => B0M, 
         C_in => M,
         S => S_out(0), 
         C_out => FA0_C); 
 
 FA_1 : FA 
    port map ( 
         A => A(1), 
         B => B1M, 
         C_in => FA0_C, 
         S => S_out(1), 
         C_out => FA1_C); 
 
 FA_2 : FA 
    port map ( 
         A => A(2), 
         B => B2M, 
         C_in => FA1_C, 
         S =>S_out(2), 
         C_out => FA2_C); 
 
 FA_3 : FA 
    port map ( 
         A => A(3), 
         B => B3M, 
         C_in => FA2_C, 
         S => S_out(3), 
         C_out => FA3_C);  
         
B0M <= B(0)XOR M;
B1M <= B(1) XOR M;
B2M <= B(2) XOR M;
B3M <= B(3) XOR M;
S<=S_out;
C_out <= (NOT S_out(0)) AND( NOT S_out(1)) AND (NOT S_out(2)) AND (NOT S_out(3));
Over_Flow <=(FA2_C XOR FA3_C);
end Behavioral; 